# This is a basic workflow to help you get started with Actions

name: snapshot

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ snapshot ]
  pull_request:
    branches: [ snapshot ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Cache
        uses: actions/cache@v2.1.6
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: ~/.m2
          # An explicit key for restoring and saving the cache
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
          restore-keys: |
            ${{ runner.os }}-maven-
      
      # 安装JDK环境
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: snapshot
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          gpg-private-key: ${{ secrets.OSS_GPG_SECRET }}
          
      - name: Publish package
        run: mvn -DskipTests -B -e clean deploy -P snapshot,!release -Dlicense.skip=true
        env:
          MAVEN_USERNAME: ${{ secrets.SNAPSHOTS_OSS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SNAPSHOTS_OSS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SNAPSHOTS_OSS_GPG_PASSPHRASE }}
          
    # Steps represent a sequence of tasks that will be executed as part of the job
    
#     steps:  
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2
#       - name: Set up Apache Maven Central
#         uses: actions/setup-java@v2
#         with:
# #           java-version: 1.8
#           java-version: '11'
#           distribution: 'adopt'
#           server-id: snapshots-oss
#           # Nexus用户名环境变量
#           server-username: ${{ secrets.SNAPSHOTS_OSS_USERNAME }}
#           # Nexus密码环境变量
#           server-password: ${{ secrets.SNAPSHOTS_OSS_PASSWORD }}
#           # gpg短密码环境变量
          
          
#           # gpg私钥
# #           gpg-private-key: ${{ secrets.OSS_GPG_SECRET }}  
          
    
#       - name: action-maven-publish
#         # You may pin to the exact commit or the version.
#         # uses: samuelmeuli/action-maven-publish@201a45a3f311b2ee888f252ba9f4194257545709
#         uses: samuelmeuli/action-maven-publish@v1.4.0
#         with:
#           # GPG private key for signing the published artifacts
#           gpg_private_key: ${{ secrets.OSS_GPG_SECRET }}
#           # Passphrase for the GPG key
#           gpg_passphrase: ${{ secrets.SNAPSHOTS_OSS_GPG_PASSPHRASE }}
#           # Username (not email!) for your Nexus repository manager account
#           nexus_username: ${{ secrets.SNAPSHOTS_OSS_USERNAME }}
#           # Password for your Nexus account
#           nexus_password: ${{ secrets.SNAPSHOTS_OSS_PASSWORD }}
#           # Nexus server ID as specified in your project's `nexus-staging-maven-plugin` and `distributionManagement` configurations
#           server_id: snapshot
#           # Directory of the Maven project which should be deployed
# #           directory: # optional
#           # Maven goals and build phases to execute
# #           maven_goals_phases: # optional, default is clean deploy
#           # Additional arguments to pass to the Maven command
#           maven_args: -B -e -U
#           # Active Maven profiles
#           maven_profiles: snapshot
   

# #       - name: Publish to Maven Central Repo
# #         uses: samuelmeuli/action-maven-publish@v1
# #         with:
# #          gpg_private_key: ${{ secrets.OSS_GPG_SECRET }}
# #          gpg_passphrase: ${{ secrets.SNAPSHOTS_OSS_GPG_PASSPHRASE }}
# #          nexus_username: ${{ secrets.SNAPSHOTS_OSS_USERNAME }}
# #          nexus_password: ${{ secrets.SNAPSHOTS_OSS_PASSWORD }}
         
 
#          #       - name: Publish package
# #         run: mvn -DskipTests -B -e -U clean deploy -P snapshot,!release
# #         env:
# #           MAVEN_USERNAME: ${{ secrets.SNAPSHOTS_OSS_USERNAME }}
# #           MAVEN_PASSWORD: ${{ secrets.SNAPSHOTS_OSS_PASSWORD }}
# #         MAVEN_GPG_PASSPHRASE: ${{ secrets.SNAPSHOTS_OSS_GPG_PASSPHRASE }}
        
        
        
        
