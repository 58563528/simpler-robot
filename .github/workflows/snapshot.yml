# This is a basic workflow to help you get started with Actions

name: snapshot

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the dev branch
  push:
    branches: [ snapshot ]
  pull_request:
    branches: [ snapshot ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:  
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Set up Apache Maven Central
        uses: actions/setup-java@v2
        with:
          java-version: 1.8
          server-id: snapshots-oss
          # Nexus用户名环境变量
          server-username: MAVEN_USERNAME
          # Nexus密码环境变量
          server-password: MAVEN_PASSWORD
          # gpg短密码环境变量
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          # gpg私钥
          gpg-private-key: ${{ secrets.OSS_GPG_SECRET }}  
          
#       - name: Cache
#         uses: actions/cache@v2.1.6
#         with:
#           # A list of files, directories, and wildcard patterns to cache and restore
#           path: ~/.m2
#           # An explicit key for restoring and saving the cache
#           key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#           # An ordered list of keys to use for restoring the cache if no cache hit occurred for key
#           restore-keys: |
#             ${{ runner.os }}-maven-
          
          
#       # Runs a single command using the runners shell
#       - name: Run a one-line script
#         run: echo Hello, world!

#       # Runs a set of commands using the runners shell
#       - name: Run a multi-line script
#         run: |
#           echo Add other actions to build,
#           echo test, and deploy your project.
    

        
      - name: Publish package
        run: mvn -DskipTests -B -e -U clean deploy -P snapshot,!release
        env:
          MAVEN_USERNAME: ${{ secrets.SNAPSHOTS_OSS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.SNAPSHOTS_OSS_PASSWORD }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.SNAPSHOTS_OSS_GPG_PASSPHRASE }}
        
        
        
        
